<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:local="clr-namespace:AHT_Buddy"
        
        xmlns:Custom="http://metro.mahapps.com/winfx/xaml/controls" x:Class="AHT_Buddy.MainWindow"
        
        mc:Ignorable="d"
        Title="AHT Buddy" Height="591.962" Width="294" Icon="flat-clock-theme-gear-icon.png" Closed="window_Closed" ResizeMode="CanResizeWithGrip">
    <Window.Resources>
        <Storyboard x:Key="PanelOpen">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="POD_Panel">
                <EasingThicknessKeyFrame KeyTime="0" Value="0,36,-108.998,0"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="0,36,6,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PanelClose">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="POD_Panel">
                <SplineThicknessKeyFrame KeyTime="0" Value="0,36,6,0"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="0,36,-108.998,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PWpanelOpen">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="POD_PW_Panel">
                <EasingThicknessKeyFrame KeyTime="0" Value="-225.5,36,0,28.015"/>
                <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="5,36,0,28.015"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="PWpanelClose">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="POD_PW_Panel">
                <SplineThicknessKeyFrame KeyTime="0" Value="5,36,0,28.015"/>
                <SplineThicknessKeyFrame KeyTime="0:0:0.1" Value="-225.5,36,0,28.015"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="rEmailBorder">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Stroke).(SolidColorBrush.Color)" Storyboard.TargetName="r_email">
                <EasingColorKeyFrame KeyTime="0" Value="#FFF4FF03"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="rEmailBorderNormal">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="window">
                <EasingColorKeyFrame KeyTime="0" Value="White"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RemedyCodeOpen"/>
        <Storyboard x:Key="RemedyCodeClosed"/>
        <Storyboard x:Key="NotesOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="NotesPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="-228.114"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="NotesClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="NotesPanel">
                <SplineDoubleKeyFrame KeyTime="0" Value="-228.114"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="Hal2000">
            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="rbChronic">
                <EasingColorKeyFrame KeyTime="0" Value="Red"/>
                <EasingColorKeyFrame KeyTime="0:0:1" Value="Black"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="AlarmOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="AlarmPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="203.003"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="AlarmClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="AlarmPanel">
                <SplineDoubleKeyFrame KeyTime="0" Value="197"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="Green"/>
                            </Trigger>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Menu.Static.Background" Color="#FFF0F0F0"/>
        <Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
            <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle2" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{x:Null}" Margin="1" Opacity="0" Stretch="None"/>
                                    <Rectangle x:Name="indeterminateMark" Fill="{x:Null}" Margin="2" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{x:Null}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{x:Null}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{x:Null}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{x:Null}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{x:Null}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{x:Null}"/>
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
        <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid x:Name="markGrid" Margin="2">
                                    <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                <Setter Property="Padding" Value="4,-1,0,0"/>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                            </Trigger>

                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToggleButtonStyle3" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{x:Null}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="RemedyOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ComboBoxPanel">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-160.744"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="RemedyClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)" Storyboard.TargetName="ComboBoxPanel">
                <SplineDoubleKeyFrame KeyTime="0" Value="-160.744"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <DrawingBrush x:Key="One" Viewbox="0,0,5,39" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M0.5,0.5L4.5,0.5 4.5,38.5 0.5,38.5z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Two" Viewbox="0,0,20,39" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M0.5,0.5 L19.5,0.5 19.5,20.221519 2.9358978,20.221519 2.9358978,36.094937 19.5,36.094937 19.5,38.5 0.5,38.5 0.5,17.335443 17.064103,17.335443 17.064103,2.9050631 0.5,2.9050631 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Three" Viewbox="0,0,20,39" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M0.5,0.5 L19.5,0.5 19.5,38.5 0.5,38.5 0.5,36.094937 17.064103,36.094937 17.064103,20.221519 0.5,20.221519 0.5,16.85443 17.064103,16.85443 17.064103,2.9050631 0.5,2.9050631 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Four" Viewbox="0,0,20,39" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M0.5,0.5 L2.9358978,0.5 2.9358978,16.85443 17.064102,16.85443 17.064102,0.5 19.5,0.5 19.5,38.5 17.064102,38.5 17.064102,20.221519 0.5,20.221519 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Five" Viewbox="0,0,20,39" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M0.5,0.5 L19.5,0.5 19.5,20.221519 2.9358978,20.221519 2.9358978,36.094937 19.5,36.094937 19.5,38.5 0.5,38.5 0.5,17.335443 17.064103,17.335443 17.064103,2.9050631 0.5,2.9050631 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Six" Viewbox="0,0,20,40" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M2.9358975,20.330508 L2.9358975,36.194915 17.064103,36.194915 17.064103,20.330508 z M0.5,0.5 L2.9358975,0.5 2.9358975,16.364407 19.5,16.364407 19.5,39.5 0.5,39.5 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Seven" Viewbox="0,0,20,40" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M0.5,0.5 L19.5,0.5 19.5,39.5 17.064103,39.5 17.064103,3.8050851 0.5,3.8050851 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Eight" Viewbox="0,0,20,40" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M2.9358975,20.330508 L2.9358975,36.194915 17.064103,36.194915 17.064103,20.330508 z M2.9358975,3.8050847 L2.9358975,16.364407 17.064103,16.364407 17.064103,3.8050847 z M0.5,0.5 L19.5,0.5 19.5,39.5 0.5,39.5 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Nine" Viewbox="0,0,20,40" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M2.9358975,20.330508 L2.9358975,36.194915 17.064103,36.194915 17.064103,20.330508 z M0.5,0.5 L2.9358975,0.5 2.9358975,16.364407 19.5,16.364407 19.5,39.5 0.5,39.5 z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
        <DrawingBrush x:Key="Colon" Viewbox="0,0,5,32" ViewboxUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Brush="#FF161616" Geometry="M0.5,20.5L4.4999999,20.5 4.4999999,31.5 0.5,31.5z M0.5,0.5L4.4999999,0.5 4.4999999,11.5 0.5,11.5z">
                    <GeometryDrawing.Pen>
                        <Pen Brush="White" DashCap="Flat" EndLineCap="Flat" LineJoin="Miter" MiterLimit="10" StartLineCap="Flat" Thickness="1"/>
                    </GeometryDrawing.Pen>
                </GeometryDrawing>
            </DrawingBrush.Drawing>
        </DrawingBrush>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="Expander.Expanded" SourceName="pw_Expander">
            <BeginStoryboard x:Name="PWpanelOpen_BeginStoryboard" Storyboard="{StaticResource PWpanelOpen}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Expander.Collapsed" SourceName="pw_Expander">
            <BeginStoryboard x:Name="PWpanelClose_BeginStoryboard" Storyboard="{StaticResource PWpanelClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Expander.Expanded" SourceName="podExpander">
            <BeginStoryboard x:Name="PanelOpen_BeginStoryboard" Storyboard="{StaticResource PanelOpen}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Expander.Collapsed" SourceName="podExpander">
            <BeginStoryboard x:Name="PanelClose_BeginStoryboard" Storyboard="{StaticResource PanelClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Expander.Expanded" SourceName="NotesExpander">
            <BeginStoryboard Storyboard="{StaticResource NotesOpen}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Expander.Collapsed" SourceName="NotesExpander">
            <BeginStoryboard x:Name="NotesClose_BeginStoryboard" Storyboard="{StaticResource NotesClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Control.MouseDoubleClick" SourceName="curTime">
            <BeginStoryboard Storyboard="{StaticResource AlarmOpen}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="toggleButton">
            <BeginStoryboard x:Name="AlarmClose_BeginStoryboard" Storyboard="{StaticResource AlarmClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Expander.Expanded" SourceName="RemedyCodesExpander">
            <BeginStoryboard Storyboard="{StaticResource RemedyOpen}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="Expander.Collapsed" SourceName="RemedyCodesExpander">
            <BeginStoryboard x:Name="RemedyClose_BeginStoryboard" Storyboard="{StaticResource RemedyClose}"/>
        </EventTrigger>
    </Window.Triggers>
    <Grid x:Name="MainGrid" Background="#FF161616" Margin="0,0,0,-1">
        <Button x:Name="bRemedy" Content="Remedy" HorizontalAlignment="Left" Height="51" Margin="10,423,0,0" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Width="85" Click="bRemedy_Click">
            <Button.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFEEEEEE" Offset="0"/>
                    <GradientStop Color="Black" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Button x:Name="bWDT" Content="WDT" HorizontalAlignment="Left" Height="51" Margin="99,423,0,0" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Width="85" Click="bWDT_Click">
            <Button.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFEEEEEE" Offset="0"/>
                    <GradientStop Color="Black" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Button x:Name="bNextCall" Content="Next Call" Height="51" Margin="188,423,10,0" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Click="bNextCall_Click" ToolTip="RMB to Get Last Call Data">
            <Button.ContextMenu>
                <ContextMenu HorizontalContentAlignment="Center">
                    <MenuItem x:Name="LastCall" Header="Get Last Call Data" Click="LastCall_Click" Foreground="Black" Background="{x:Null}">
                        <MenuItem.Icon>
                            <Image Source="Recall-128.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Button.ContextMenu>


            <Button.Background>
                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                    <GradientStop Color="#FFEEEEEE" Offset="0"/>
                    <GradientStop Color="Black" Offset="1"/>
                </LinearGradientBrush>
            </Button.Background>
        </Button>
        <Label x:Name="curDate" Content="Wednesday, November, 30th, 2016" HorizontalAlignment="Left" Height="31" Margin="0,3,0,0" VerticalAlignment="Top" Width="183" Foreground="#FFBFBFBF" FontSize="11" VerticalContentAlignment="Center"/>
        <Label x:Name="curTime" Content="00:00:00 PM" Height="31" Margin="188,3,0,0" VerticalAlignment="Top" Foreground="#FFBFBFBF" FontSize="11" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" ToolTip="Double Click to Set Break/Lunch Alarms"/>
        <Border x:Name="rEmail" Height="24" Margin="7,36,10,0" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Rectangle x:Name="r_email" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF494949" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Email" TextWrapping="Wrap" Text="Customer Email" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,0.5" FontStyle="Italic" FontSize="16" VerticalAlignment="Center" GotFocus="Email_GotFocus" LostFocus="Email_LostFocus" SpellCheck.IsEnabled="True" TextChanged="Email_TextChanged" KeyUp="Email_KeyUp" Drop="podTechnicolor_Drop" MouseDoubleClick="Email_MouseDoubleClick" CaretBrush="White" ToolTip="Customer Email - Double Click to Copy"  />
            </Grid>
        </Border>
        <Border x:Name="rTicket" Height="24" Margin="7,64,10,0" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0*"/>
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="r_ticket" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF6A6A6A" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Ticket" TextWrapping="Wrap" Text="Ticket Number" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,1,10,1.5" FontStyle="Italic" FontSize="16" VerticalAlignment="Center" GotFocus="Ticket_GotFocus" LostFocus="Ticket_LostFocus" SpellCheck.IsEnabled="True" Height="22" DragEnter="podTechnicolor_DragEnter" Drop="podTechnicolor_Drop" CaretBrush="White" ToolTip="Ticket Number - Double Click to Copy" MouseDoubleClick="Email_MouseDoubleClick"/>
            </Grid>
        </Border>
        <Border x:Name="rCx" Height="24" Margin="7,92,10,0" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Rectangle x:Name="r_Cx" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF6A6A6A" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Cx" TextWrapping="Wrap" Text="Customer Name" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,0.5" FontStyle="Italic" FontSize="16" VerticalAlignment="Center" GotFocus="Cx_GotFocus" LostFocus="Cx_LostFocus" SpellCheck.IsEnabled="True" DragEnter="podTechnicolor_DragEnter" Drop="podTechnicolor_Drop" MouseDoubleClick="Email_MouseDoubleClick" CaretBrush="White" ToolTip="Customer Name - Double Click to Copy"/>
            </Grid>
        </Border>
        <Border x:Name="rAccount" Height="24" Margin="7,120,10,0" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Rectangle x:Name="r_Account" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF6A6A6A" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Account" TextWrapping="Wrap" Text="Account Number" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,0.5" FontStyle="Italic" FontSize="16" VerticalAlignment="Center" GotFocus="Account_GotFocus" LostFocus="Account_LostFocus" SpellCheck.IsEnabled="True" DragEnter="podTechnicolor_DragEnter" Drop="podTechnicolor_Drop" MouseDoubleClick="Email_MouseDoubleClick" CaretBrush="White" ToolTip="Account Number - Double Click to Copy"/>
            </Grid>
        </Border>
        <Border x:Name="rContact" Height="24" Margin="7,148,10,0" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Rectangle x:Name="r_Contact" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5" MouseEnter="r_ticket_MouseEnter" MouseLeave="r_ticket_MouseLeave">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF6A6A6A" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Contact" TextWrapping="Wrap" Text="Contact Number" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,0.5" FontStyle="Italic" FontSize="16" VerticalAlignment="Center" GotFocus="Contact_GotFocus" LostFocus="Contact_LostFocus" SpellCheck.IsEnabled="True" MouseDoubleClick="Contact_MouseDoubleClick" CaretBrush="White" ToolTip="Contact Number - RMB to set 91 prefix - Double Click to Copy">
                    <TextBox.ContextMenu>
                        <ContextMenu>
                            <CheckBox Content="91" x:Name="cb91"/>
                        </ContextMenu>
                    </TextBox.ContextMenu>
                </TextBox>
            </Grid>
        </Border>
        <Border x:Name="rAffected" Height="24" Margin="7,176,10,0" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Rectangle x:Name="r_Affected" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF494949" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Affected" TextWrapping="Wrap" Text="Affected Device" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,0.5" FontStyle="Italic" FontSize="16" VerticalAlignment="Center" GotFocus="Affected_GotFocus" LostFocus="Affected_LostFocus" SpellCheck.IsEnabled="True" CaretBrush="White" ToolTip="Affected Device"/>
            </Grid>
        </Border>
        <Border x:Name="rIssue" Margin="7,204,10,0" Height="90" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5" Height="90">
                <Rectangle x:Name="r_Issue" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF6A6A6A" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Issue" TextWrapping="Wrap" Text="Reported Issue" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,1.36" FontStyle="Italic" FontSize="16" GotFocus="Issue_GotFocus" LostFocus="Issue_LostFocus" SpellCheck.IsEnabled="True" AcceptsReturn="True" KeyUp="Issue_KeyUp" TextChanged="Issue_TextChanged" CaretBrush="White" ToolTip="Reported Issue"/>
            </Grid>
        </Border>
        <Border x:Name="rResolve" Margin="7,299,10,0" Height="90" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Rectangle x:Name="r_Resolve" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF6A6A6A" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Resolve" TextWrapping="Wrap" Text="Identify &amp; Resolve" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,1.36" FontStyle="Italic" FontSize="16" GotFocus="Resolve_GotFocus" LostFocus="Resolve_LostFocus" TextChanged="Resolve_TextChanged" SpellCheck.IsEnabled="True" AcceptsReturn="True" KeyUp="Resolve_KeyUp" MouseDoubleClick="Email_MouseDoubleClick" CaretBrush="White" ToolTip="Identify &amp; Resolve  - Double Click to Copy"/>
            </Grid>
        </Border>
        <Grid x:Name="POD_Panel" HorizontalAlignment="Right" Height="329.333" Margin="0,36,-108.998,0" VerticalAlignment="Top" Width="136">
            <Grid.Effect>
                <DropShadowEffect/>
            </Grid.Effect>
            <Grid Margin="31.121,0,-4.121,0">
                <Rectangle x:Name="podRectangle" Fill="#FF161616" Stroke="White" RadiusX="10" RadiusY="10" Opacity="0.75"/>
                <Button x:Name="b_Cisco" Content="Cisco" Height="51" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Margin="12.334,138.666,11.666,0" Click="b_Cisco_Click" HorizontalContentAlignment="Center">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <Button x:Name="b_Dory" Content="SMC (Dory)" Height="51" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Margin="12.334,199.663,11.666,0" Click="b_Dory_Click" HorizontalContentAlignment="Center">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <Button x:Name="b_SMC" Content="SMC" Height="51" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Margin="12.334,261.461,11.666,0" Click="b_SMC_Click" HorizontalContentAlignment="Center">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <Button x:Name="b_Technicolor" Content="Technicolor" Height="51" Style="{DynamicResource SimpleButton}" VerticalAlignment="Top" Margin="14,10,10,0" Click="b_Technicolor_Click" ToolTip="RMB to Set AM/PM">
                    <Button.ContextMenu>
                        <ContextMenu Foreground="#FF646464">
                            <CheckBox Content="PM" IsChecked="False" x:Name="cbPM" Checked="cbPM_Checked" Unchecked="cbPM_Unchecked"/>
                        </ContextMenu>
                    </Button.ContextMenu>
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <Button x:Name="b_Arris" Content="Arris" Height="50" Style="{DynamicResource SimpleButton}" Margin="14,76.5,10,0" Click="b_Arris_Click" HorizontalContentAlignment="Center" VerticalAlignment="Top" UseLayoutRounding="False">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEEEE" Offset="0"/>
                            <GradientStop Color="Black" Offset="1"/>
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
            </Grid>
            <Expander x:Name="podExpander" Header="Expander" HorizontalAlignment="Right" Margin="0,0,105,70.333" Width="27" ExpandDirection="Left" ToolTip="PODs" Height="23" VerticalAlignment="Bottom">
                <Grid Background="#FFE5E5E5"/>
            </Expander>
        </Grid>
        <Border x:Name="rAttempt" Height="24" Margin="10,479,148,0" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Rectangle x:Name="r_Attempt" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF494949" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="Attempt" TextWrapping="Wrap" Text="Attempt Number" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,0,0.5" FontStyle="Italic" VerticalAlignment="Center" GotFocus="Email_GotFocus" LostFocus="Email_LostFocus" SpellCheck.IsEnabled="True" TextChanged="Email_TextChanged" KeyUp="Email_KeyUp" CaretBrush="White"  />
            </Grid>
        </Border>
        <Border x:Name="rNextAction" Height="24" Margin="7,394,10,0" VerticalAlignment="Top">
            <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,0,-0.5">
                <Rectangle x:Name="r_NextAction" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                    <Rectangle.Fill>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <LinearGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                    <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                    <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </LinearGradientBrush.RelativeTransform>
                            <GradientStop Color="#FF161616" Offset="0.638"/>
                            <GradientStop Color="#FF494949" Offset="0.018"/>
                        </LinearGradientBrush>
                    </Rectangle.Fill>
                </Rectangle>
                <TextBox x:Name="NextAction" TextWrapping="Wrap" Text="Next Action" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,2.5" FontStyle="Italic" FontSize="16" VerticalAlignment="Center" GotFocus="NextAction_GotFocus" LostFocus="NextAction_LostFocus" SpellCheck.IsEnabled="True"  TextChanged="Email_TextChanged" CaretBrush="White"  />
            </Grid>
        </Border>
        <Grid x:Name="POD_PW_Panel" HorizontalAlignment="Left" Margin="-226,36,0,0" Width="221" Height="446" VerticalAlignment="Top">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="PODreset" Header="Reset PODs" Click="PODreset_Click">
                        <MenuItem.Icon>
                            <Image Source="Reset-Settings-128.png"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </Grid.ContextMenu>
            <Grid.Effect>
                <DropShadowEffect/>
            </Grid.Effect>
            <Expander x:Name="pw_Expander" Header="Expander" HorizontalAlignment="Left" Margin="221,236,-27,0" Width="27" ExpandDirection="Right" ToolTip="POD Password List" Height="28" VerticalAlignment="Top">
                <Expander.ContextMenu>
                    <ContextMenu/>
                </Expander.ContextMenu>
                <Grid Background="#FFE5E5E5"/>
            </Expander>
            <Rectangle x:Name="rPODpwPanel" RadiusY="10" RadiusX="10" Stroke="White" Fill="#FF161616" ToolTip="RMB to Clear POD data"/>
            <Border x:Name="rPodTechnicolor" Height="62.667" Margin="5.5,22.332,0,0" VerticalAlignment="Top">
                <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,5,-0.5">
                    <Rectangle x:Name="r_PodTechnicolor" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5" >
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                        <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#FF161616" Offset="0.638"/>
                                <GradientStop Color="#FF494949" Offset="0.018"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBox x:Name="podTechnicolor" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,0.416,0.22" FontStyle="Italic" FontSize="14" SpellCheck.IsEnabled="True"  AcceptsReturn="True" AcceptsTab="True" DragEnter="podTechnicolor_DragEnter" Drop="podTechnicolor_Drop" Cursor="IBeam" CaretBrush="White"/>
                </Grid>
            </Border>
            <Label x:Name="lbTechnicolor" Content="Technicolor" Height="31" VerticalAlignment="Top" Foreground="White" FontSize="11" VerticalContentAlignment="Center" Margin="4,0,147,0"/>
            <Border x:Name="rArris" Height="62.667" Margin="5.5,107.904,0,0" VerticalAlignment="Top">
                <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,5,-0.5">
                    <Rectangle x:Name="r_Arris" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                        <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#FF161616" Offset="0.638"/>
                                <GradientStop Color="#FF494949" Offset="0.018"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBox x:Name="podArris" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,0.416,0.22" FontStyle="Italic" FontSize="14" SpellCheck.IsEnabled="True"  AcceptsReturn="True" AcceptsTab="True" DragEnter="podTechnicolor_DragEnter" Drop="podTechnicolor_Drop" CaretBrush="White" HorizontalScrollBarVisibility="Auto"/>
                </Grid>
            </Border>
            <Label x:Name="lbArris" Content="Arris" Height="31" VerticalAlignment="Top" Foreground="White" FontSize="11" VerticalContentAlignment="Center" Margin="6,85,158,0"/>
            <Border x:Name="rCisco" Margin="4.5,192.903,1,186.93">
                <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,5,-0.5">
                    <Rectangle x:Name="r_Cisco" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5" >
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                        <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#FF161616" Offset="0.638"/>
                                <GradientStop Color="#FF494949" Offset="0.018"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBox x:Name="podCisco" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,0.416,0.22" FontStyle="Italic" FontSize="14" SpellCheck.IsEnabled="True" AcceptsReturn="True" AcceptsTab="True" DragEnter="podTechnicolor_DragEnter" Drop="podTechnicolor_Drop" CaretBrush="White" HorizontalScrollBarVisibility="Auto"/>
                </Grid>
            </Border>
            <Label x:Name="lbCisco" Content="Cisco" Height="31" VerticalAlignment="Top" Foreground="White" FontSize="11" VerticalContentAlignment="Center" Margin="6,171,170,0"/>
            <Border x:Name="rDory" Height="62.667" Margin="4.5,0,1,102.431" VerticalAlignment="Bottom">
                <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,5,-0.5">
                    <Rectangle x:Name="r_Dory" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5" >
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                        <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#FF161616" Offset="0.638"/>
                                <GradientStop Color="#FF494949" Offset="0.018"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBox x:Name="podDory" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0.416,0.22,0,0" FontStyle="Italic" FontSize="14" SpellCheck.IsEnabled="True"  AcceptsReturn="True" AcceptsTab="True" DragEnter="podTechnicolor_DragEnter" Drop="podTechnicolor_Drop" CaretBrush="White" HorizontalScrollBarVisibility="Auto"/>
                </Grid>
            </Border>
            <Label x:Name="lbDory" Content="SMC (Dory)" Height="31" VerticalAlignment="Bottom" Foreground="White" FontSize="11" VerticalContentAlignment="Center" Margin="6,0,147,156"/>
            <Border x:Name="rSMC" Height="62.667" Margin="5.5,0,0,16.766" VerticalAlignment="Bottom">
                <Grid RenderTransformOrigin="0.425,0.605" Margin="0,0,5,-0.5">
                    <Rectangle x:Name="r_SMC" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0.416,0.5" >
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                        <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#FF161616" Offset="0.638"/>
                                <GradientStop Color="#FF494949" Offset="0.018"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBox x:Name="podSMC" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0.416,0.22,0,0" FontStyle="Italic" FontSize="14" SpellCheck.IsEnabled="True"  AcceptsReturn="True" AcceptsTab="True" DragEnter="podTechnicolor_DragEnter" Drop="podTechnicolor_Drop" CaretBrush="White" HorizontalScrollBarVisibility="Auto"/>
                </Grid>
            </Border>
            <Label x:Name="lbSMC" Content="SMC" Height="31" VerticalAlignment="Bottom" Foreground="White" FontSize="11" VerticalContentAlignment="Center" Margin="6,0,158,71"/>
        </Grid>
        <Grid x:Name="AlarmPanel" Margin="0,-199,33,0" Height="167" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right" Width="222">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle x:Name="rAlarmPanel" Fill="#FF161616" Stroke="White" RadiusX="10" RadiusY="10">
                <Rectangle.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="ResetAllAlarms" Header="Reset All Alarms" Click="ResetAllAlarms_Click"/>
                    </ContextMenu>
                </Rectangle.ContextMenu>
            </Rectangle>
            <Grid x:Name="TimeGrid" HorizontalAlignment="Left" Height="19" Margin="156,68,0,0" VerticalAlignment="Top" Width="56">
                <Label x:Name="lbHour" Content="00" HorizontalAlignment="Left" Height="16" VerticalAlignment="Top" Width="15" Foreground="White" Padding="1" HorizontalContentAlignment="Right"/>
                <Label x:Name="lbColon" Content=":" HorizontalAlignment="Left" Height="16" Margin="13,0,0,0" VerticalAlignment="Top" Width="4" Foreground="White" Padding="1"/>
                <Label x:Name="lbMinute" Content="00" HorizontalAlignment="Left" Height="16" Margin="16,0,0,0" VerticalAlignment="Top" Width="15" Foreground="White" Padding="1"/>
                <Label x:Name="lbAMPM" Content="AM" HorizontalAlignment="Left" Height="16" Margin="31,0,0,0" VerticalAlignment="Top" Width="19" Foreground="White" Padding="1"/>
            </Grid>
            <Slider x:Name="sliderMinute" Height="22.333" Margin="10,38.251,10,0" Style="{DynamicResource SimpleSlider}" VerticalAlignment="Top" Maximum="45" SmallChange="1" TickPlacement="Both" IsSnapToTickEnabled="True" MouseMove="sliderMinute_MouseMove_1" TickFrequency="15"/>
            <ToggleButton x:Name="toggleButton" Content="X" Height="20" Margin="0,0,10,11" Width="17" Foreground="White" BorderBrush="Red" Background="{x:Null}" HorizontalAlignment="Right" HorizontalContentAlignment="Center" ToolTip="Close" VerticalAlignment="Bottom"/>
            <Slider x:Name="sliderHour" Height="22.333" Margin="10,10,10,0" Style="{DynamicResource SimpleSlider}" VerticalAlignment="Top" Maximum="23" SmallChange="1" TickPlacement="Both" IsSnapToTickEnabled="True" MouseMove="sliderHour_MouseMove"/>
            <CheckBox x:Name="cb3rdBreak" Content="Enable" HorizontalAlignment="Left" Height="19" Margin="136.667,136,0,0" VerticalAlignment="Top" Width="53" Foreground="White" VerticalContentAlignment="Center" FontSize="10" Padding="1,0,0,0" Checked="cb3rdBreak_Checked" Unchecked="cb3rdBreak_Unchecked"/>
            <StackPanel x:Name="Toggles" Margin="72,66,0,10" HorizontalAlignment="Left" Width="33.667">
                <ToggleButton x:Name="Break1toggle" Content="ToggleButton" Height="16" Style="{DynamicResource AnimatedSwitch}" Margin="0,3,16.5,0" Checked="Break1toggle_Checked" Unchecked="Break1toggle_Unchecked"/>
                <ToggleButton x:Name="Lunchtoggle" Content="ToggleButton" Height="16" Style="{DynamicResource AnimatedSwitch}" Margin="0,7,16.5,0" d:LayoutOverrides="TopPosition, BottomPosition" Checked="Lunchtoggle_Checked" Unchecked="Lunchtoggle_Unchecked"/>
                <ToggleButton x:Name="Break2toggle" Content="ToggleButton" Height="16" Style="{DynamicResource AnimatedSwitch}" Margin="0,7,16.5,0" Unchecked="Break2toggle_UnChecked" Checked="Break2toggle_Checked"/>
                <ToggleButton x:Name="Break3toggle" Content="ToggleButton" Height="16" Style="{DynamicResource AnimatedSwitch}" Margin="0,7,16.5,0" Checked="Break3toggle_Checked" Unchecked="Break3toggle_Unchecked" IsEnabled="False"/>
            </StackPanel>
            <StackPanel x:Name="iconStack" Margin="105.667,66,90.333,11">
                <Image x:Name="Break1Coffee" Height="15" Source="Coffee.png" RenderTransformOrigin="-2.079,-0.656" ToolTip="Break 1" Margin="0,3,0,0"/>
                <Image x:Name="LunchHamburger" Height="16" Source="Hamburger.png" RenderTransformOrigin="-2.079,-0.656" ToolTip="Lunch" d:LayoutOverrides="TopPosition, BottomPosition" Margin="0,8,0,0"/>
                <Image x:Name="Break2Coffee" Margin="0,7,0.095,0" Source="Coffee.png" RenderTransformOrigin="-2.079,-0.656" ToolTip="Break 2" Height="15.312">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform Angle="0.74"/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>
                <Image x:Name="Break3Coffee" Height="16" Source="Coffee.png" RenderTransformOrigin="-2.079,-0.656" ToolTip="Break 3" Margin="0,8,0,0" IsEnabled="False"/>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" Height="91" Margin="14,66,0,0" VerticalAlignment="Top" Width="53">
                <TextBlock x:Name="tbBreak1" HorizontalAlignment="Left" Height="16" Margin="0,3,-7,0" TextWrapping="Wrap" Text="12:00 AM" VerticalAlignment="Top" Width="52" Foreground="White" ToolTip="RMB to Set Break 1 Alarm">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="SetBreak1" Header="Reset Break 1 Alarm" Click="SetBreak1_Click">
                                <MenuItem.Icon>
                                    <Image Source="Coffee.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
                <TextBlock x:Name="tbLunch" HorizontalAlignment="Left" Height="16" Margin="0,7,-9,0" TextWrapping="Wrap" Text="12:00 AM" VerticalAlignment="Top" Width="52" Foreground="White" ToolTip="Set Lunch Break Alarm">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="SetLunch" Click="SetLunch_Click" Header="Set Lunch Break Alarm">
                                <MenuItem.Icon>
                                    <Image Source="Hamburger.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
                <TextBlock x:Name="tbBreak2" HorizontalAlignment="Left" Height="16" Margin="0,7,-7,0" TextWrapping="Wrap" Text="12:00 AM" VerticalAlignment="Top" Width="52" Foreground="White" ToolTip="Set Break 2 Alarm">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="SetBreak2" Header="Set 2nd Break Alarm" Click="SetBreak2_Click">
                                <MenuItem.Icon>
                                    <Image Source="Coffee.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
                <TextBlock x:Name="tbBreak3" HorizontalAlignment="Right" Height="16" Margin="0,7,1,0" TextWrapping="Wrap" Text="12:00 AM" VerticalAlignment="Top" Width="52" Foreground="White" ToolTip="Set Break 3 Alarm" IsEnabled="False">
                    <TextBlock.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="SetBreak3" Header="Set 3rd Break Alarm" Click="SetBreak3_Click">
                                <MenuItem.Icon>
                                    <Image Source="Coffee.png"/>
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </TextBlock.ContextMenu>
                </TextBlock>
            </StackPanel>
            <StackPanel HorizontalAlignment="Left" Height="90" Margin="4,66,0,0" VerticalAlignment="Top" Width="10">
                <Ellipse x:Name="lightBreak1" Fill="Red" HorizontalAlignment="Left" Height="8" Stroke="Black" VerticalAlignment="Top" Width="8" Margin="0,8,0,0"/>
                <Ellipse x:Name="lightLunch" Fill="Red" HorizontalAlignment="Left" Height="8" Margin="0,15,0,0" Stroke="Black" VerticalAlignment="Top" Width="8" RenderTransformOrigin="-0.75,0.969"/>
                <Ellipse x:Name="lightBreak2" Fill="Red" HorizontalAlignment="Left" Height="8" Stroke="Black" VerticalAlignment="Top" Width="8" Margin="0,14,0,0"/>
                <Ellipse x:Name="lightBreak3" Fill="Red" HorizontalAlignment="Left" Height="8" Stroke="Black" VerticalAlignment="Top" Width="8" Margin="0,15,0,0" IsEnabled="False"/>
            </StackPanel>
            <Button x:Name="button" Content="Button" HorizontalAlignment="Left" Height="25" Margin="149,94,0,0" VerticalAlignment="Top" Width="63" Click="button_Click"/>
        </Grid>
        <RadioButton x:Name="rbChronic" Content="Chronic Account" HorizontalAlignment="Left" Height="24" Margin="143,479,0,0" VerticalAlignment="Top" Width="110" Foreground="#FFAFAFAF" VerticalContentAlignment="Center" Padding="0,-1,0,0" HorizontalContentAlignment="Center" Background="Red" ContextMenuOpening="rbChronic_ContextMenuOpening" ToolTip="RMB to Uncheck" Style="{DynamicResource RadioButtonStyle1}"/>
        <TextBlock x:Name="CurrentBreak" HorizontalAlignment="Left" Height="17" Margin="35,0,0,32" TextWrapping="Wrap" Text="First Break @ 00:00 AM" VerticalAlignment="Bottom" Width="128" Foreground="#FF00FF0C" Visibility="Collapsed"/>
        <Image x:Name="BreakIcon" HorizontalAlignment="Left" Height="22" Width="20" VerticalAlignment="Bottom" Margin="10,0,0,32"/>
        <Grid x:Name="ComboBoxPanel" Height="156" Margin="0,0,10,-153" VerticalAlignment="Bottom" RenderTransformOrigin="0,1" HorizontalAlignment="Right" Width="256">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Expander x:Name="RemedyCodesExpander" Header="" VerticalAlignment="Top" Margin="0,-21,6,0" ExpandDirection="Up" HorizontalAlignment="Right" Width="24" ToolTip="Remedy Codes">
                <Grid Background="#FFE5E5E5"/>
            </Expander>
            <Rectangle x:Name="r_ComboBoxPanel" RadiusY="10" RadiusX="10" Stroke="White" Fill="#FF161616" Margin="-5,7,0,-5"/>
            <ComboBox x:Name="comboProblem" Height="24" Style="{DynamicResource SimpleComboBox}" VerticalAlignment="Bottom" Background="#FFAAAAAA" SelectionChanged="comboProblem_SelectionChanged" Text="Problem Code" IsReadOnly="True" Foreground="#FF8A837B" Margin="2,0,6,99" />
            <Label x:Name="label" Content="Problem Code" Height="16" Style="{DynamicResource SimpleLabel}" VerticalAlignment="Bottom" Foreground="White" Margin="8,0,166,128"/>
            <Label x:Name="label_Copy" Content="Cause Code" Style="{DynamicResource SimpleLabel}" Foreground="White" Margin="5,58,189,0" Height="16" VerticalAlignment="Top"/>
            <ComboBox x:Name="comboSolution" Style="{DynamicResource SimpleComboBox}" Background="#FFAAAAAA" VerticalAlignment="Bottom" Height="23" IsReadOnly="True" SelectionChanged="comboSolution_SelectionChanged" Foreground="#FF8A837B" HorizontalAlignment="Right" Width="244" Margin="0,0,10,12"/>
            <Label x:Name="label_Copy1" Content="Solution Code" Height="17" Style="{DynamicResource SimpleLabel}" VerticalAlignment="Bottom" Foreground="White" Margin="5,0,176,35"/>
            <ComboBox x:Name="comboCause" Style="{DynamicResource SimpleComboBox}" Background="#FFAAAAAA" SelectionChanged="comboCause_SelectionChanged" IsSynchronizedWithCurrentItem="False" ItemsSource="{Binding NewItemSource}" IsTextSearchEnabled="False" IsReadOnly="True" Foreground="#FF8A837B" HorizontalAlignment="Right" Width="244" Height="23" VerticalAlignment="Bottom" Margin="0,0,10,54" />
            <Label x:Name="pcLabel" Content="-- Select Code --" HorizontalAlignment="Right" Height="24" VerticalAlignment="Bottom" Width="200" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" MouseLeftButtonDown="pcLabel_MouseLeftButtonDown" MouseLeftButtonUp="pcLabel_MouseLeftButtonUp" MouseLeave="pcLabel_MouseLeave" Background="{x:Null}" Margin="0,0,51,99"/>
            <Label x:Name="ccLabel" Content="-- Select Code --" Height="24" VerticalAlignment="Bottom" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Margin="17,0,57,54"/>
            <Label x:Name="scLabel" Content="-- Select Code --" HorizontalAlignment="Right" Height="23" VerticalAlignment="Top" Width="200" Foreground="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" IsEnabled="False" Margin="0,121,51,0"/>
            <Label x:Name="tbProblem" Content="15000" HorizontalAlignment="Right" Height="25" Width="52" Foreground="White" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontSize="14" VerticalAlignment="Top" Margin="0,5.893,6.333,0"/>
            <Label x:Name="tbCause" Content="15000" Foreground="White" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontSize="14" Margin="199,51,6,0" Height="25" VerticalAlignment="Top"/>
            <Label x:Name="tbSolution" Content="15000" HorizontalAlignment="Right" Height="26" VerticalAlignment="Top" Width="52" Foreground="White" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontSize="14" Margin="0,96.176,4.853,0"/>
        </Grid>
        <Grid x:Name="NotesPanel" HorizontalAlignment="Right" Margin="0,408,-221,22" Width="216" RenderTransformOrigin="0.5,0.5">
            <Grid.Effect>
                <DropShadowEffect/>
            </Grid.Effect>
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                </TransformGroup>
            </Grid.RenderTransform>
            <Rectangle x:Name="rNotesPanel" RadiusY="10" RadiusX="10" Stroke="White" Fill="#FF161616" Margin="0,0,3,0"/>
            <Expander x:Name="NotesExpander" Header="Expander" HorizontalAlignment="Left" Margin="-27,0,0,39" Width="27" ExpandDirection="Left" ToolTip="Call Notes" Height="22" VerticalAlignment="Bottom">
                <Grid Background="#FFE5E5E5"/>
            </Expander>
            <Border x:Name="rNotes" Margin="0,10,0,0" Height="105.5" VerticalAlignment="Top">
                <Grid RenderTransformOrigin="0.425,0.605" Margin="10,0">
                    <Rectangle x:Name="r_Resolve1" Stroke="#FF494949" RadiusX="5" RadiusY="5" Margin="0,0,0,0.5" >
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <LinearGradientBrush.RelativeTransform>
                                    <TransformGroup>
                                        <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                        <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                        <RotateTransform Angle="90" CenterY="0.5" CenterX="0.5"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </LinearGradientBrush.RelativeTransform>
                                <GradientStop Color="#FF161616" Offset="0.638"/>
                                <GradientStop Color="#FF6A6A6A" Offset="0.018"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <TextBox x:Name="CallNotes" TextWrapping="Wrap" Background="{x:Null}" Foreground="#FFC1C1C1" BorderThickness="0" Margin="0,0,10,0" FontStyle="Italic" FontSize="16" SpellCheck.IsEnabled="True" AcceptsReturn="True" AcceptsTab="True" Text="Notes" GotFocus="CallNotes_GotFocus" LostFocus="CallNotes_LostFocus" CaretBrush="White" Height="105" VerticalAlignment="Top"/>
                </Grid>
            </Border>
        </Grid>
        <TextBlock x:Name="PC" HorizontalAlignment="Left" Height="19" Margin="10,533,0,0" TextWrapping="Wrap" Text="PC - " VerticalAlignment="Top" Width="70" Foreground="White" Visibility="Collapsed"/>
        <TextBlock x:Name="CC" HorizontalAlignment="Left" Height="19" Margin="85,533,0,0" TextWrapping="Wrap" Text="CC - " VerticalAlignment="Top" Width="70" Foreground="White" Visibility="Collapsed"/>
        <TextBlock x:Name="SC" HorizontalAlignment="Left" Height="19" Margin="170,533,0,0" TextWrapping="Wrap" Text="SC -" VerticalAlignment="Top" Width="70" Foreground="White" Visibility="Collapsed"/>
        <Popup x:Name="popupAutoReplace" Margin="10,205,10,262.962" Opened="popupAutoReplace_Opened">
            <Grid Background="#FF161616" Height="170" Width="390">
                <TextBlock x:Name="breakTimer" Height="138" Margin="18,10,0,0" TextWrapping="Wrap" Text="00:00:00" VerticalAlignment="Top" Width="355" Foreground="Gainsboro" Cursor="None" IsEnabled="False" FontSize="96" Padding="0" HorizontalAlignment="Left"/>
            </Grid>
        </Popup>
        <RichTextBox x:Name="IssueRTB" HorizontalAlignment="Left" Height="117" Margin="-430,0,0,79.962" VerticalAlignment="Bottom" Width="185">
            <FlowDocument>
                <Paragraph>
                    <Run Text="RichTextBox"/>
                </Paragraph>
            </FlowDocument>
        </RichTextBox>
    </Grid>
</Window>
